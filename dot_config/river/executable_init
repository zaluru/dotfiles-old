#!/bin/sh
###########
# Interop #
#'#########
gsettings set org.gnome.desktop.default-applications.terminal exec alacritty.desktop
riverctl spawn "wbg $HOME/pictures/wallpapers/Rainnight.jpg"
riverctl spawn "yambar"
riverctl spawn "mako"

#gnome_schema="org.gnome.desktop.interface"
gsettings set "$gnome_schema" gtk-theme "Adwaita-dark"
gsettings set "$gnome_schema" icon-theme "Papirus"
gsettings set "$gnome_schema" cursor-theme "Adwaita-dark"
gsettings set "$gnome_schema" font-name "Hack Nerd Font 10"
gsettings set "$gnome_schema" cursor-theme-size "0"
#gsettings set "$gnome_schema" decoration-layout "appmenu:none"
#gsettings set "$gnome_schema" toolbar-style "GTK_TOOLBAR_BOTH_HORIZ"
#gsettings set "$gnome_schema" toolbar-icon-size "GTK_ICON_SIZE_SMALL_TOOLBAR"
gsettings set "$gnome_schema" button-images "1"
gsettings set "$gnome_schema" menu-images "1"
gsettings set "$gnome_schema" enable-event-sounds "1"
gsettings set "$gnome_schema" enable-input-feedback-sounds "1"
gsettings set "$gnome_schema" xft-antialias "1"
gsettings set "$gnome_schema" xft-hinting "1"
gsettings set "$gnome_schema" xft-hintstyle "hintmedium"
gsettings set "$gnome_schema" xft-rgba "rgb"
gsettings set org.gnome.desktop.interface gtk-theme 'adw-gtk3-dark'
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
gsettings set org.gnome.desktop.wm.preferences button-layout ''

#gsettings set org.gnome.desktop.wm.preferences button-layout ""

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

### Launching Apps

# Terminal
riverctl map normal Super+Shift Return spawn "alacritty" 

# App launcher
riverctl map normal Super D spawn "tofi-drun | xargs -I _ riverctl spawn '_'"

# Main web browser (Firefox)
riverctl map normal Super W spawn "firefox-wayland"

# Secondary web browser (Ungoogled Chromium)
riverctl map normal Super+Shift W spawn "flatpak run com.github.Eloston.UngoogledChromium --incognito"

# File manager
riverctl map normal Super R spawn "nemo"

# Password Manager
# very much a hack untill https://github.com/riverwm/river/issues/647
riverctl map normal Super P spawn '(
	if pgrep keepassxc; then
        riverctl toggle-focused-tags 1000000000
        riverctl spawn-tagmask 0111111111
	else
        riverctl float-filter-add app-id org.keepassxc.KeePassXC
        riverctl toggle-focused-tags 1000000000
        riverctl spawn-tagmask 1000000000
        flatpak run org.keepassxc.KeePassXC &
        while ! lswt| grep "org.keepassxc.KeePassXC" > /dev/null;
        do
            sleep 0.1
        done
        riverctl float-filter-remove app-id org.keepassxc.KeePassXC
        riverctl spawn-tagmask 111111111
    fi
)'

#riverctl map normal Super P spawn '(
#	if pgrep keepassxc; then
#        kill $(pgrep keepassxc)
#        riverctl float-filter-remove app-id org.keepassxc.KeePassXC
#	else
#        riverctl float-filter-add app-id org.keepassxc.KeePassXC
#        flatpak run org.keepassxc.KeePassXC
#    fi
#)'
# Audio Mixer
# TODO send to scratchpad rather than kill
riverctl map normal Super A spawn '(
	if lswt | grep pulsemixer-float; then
        kill $(ps aux | grep -v grep | grep -i "foot --app-id pulsemixer-float pulsemixer" | awk '\''{print $2;}'\'')		
	else
        foot --app-id pulsemixer-float pulsemixer
	fi
)' 

# Emacs notes
riverctl map normal Super N spawn "emacsclient --create-frame $HOME/documents/notes/notepad.org"


# Close the focused view
riverctl map normal Super+Shift C close


# Push to talk
# TODO on press call pipewire to enable a segment which passes microfon to a chat application and so
# riverctl map normal None Alt_L  spawn "notify-send press"
# TODO on release call pipewire to enable a segment which disables the segment
# riverctl map -release normal Mod1 Alt_L  spawn "notify-send release" # Had to replace None with Mod1, explanation - https://github.com/riverwm/river/issues/422

# Lock screen TODO switch to waylock on when river supports ext-session-lock-v1
riverctl map normal Super+Control L spawn "swaylock"

# Exit river
riverctl map normal Super+Shift E exit

# Focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Swap the focused view with the next/previous view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Bump the focused view to the top of the layout stack
riverctl map normal Super Return zoom

# Decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Move views with mouse 
riverctl map-pointer normal Super BTN_LEFT move-view

# Resize views with mouse
riverctl map-pointer normal Super BTN_RIGHT resize-view

# tags from 1 to 9 can be changed with
# 1 2 4 8 16 32 64 128 256

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ +5%'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ -5%'
    riverctl map $mode None XF86AudioMute         spawn 'pactl set-sink-mute 0 toggle'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
    
    #print screen TODO finish the prtsc script
    riverctl map $mode None PrtSc spawn "prtsc"
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-width 2
riverctl border-color-focused 0xcba6f7
riverctl border-color-unfocused 0x585b70

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
# you can find the app-id and title with lswt
riverctl float-filter-add app-id "float"
riverctl float-filter-add title "Picture-in-Picture"
riverctl float-filter-add app-id "pulsemixer-float"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"



# GTK hangs without this
dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY

# Import environment variables so that systemd runs smooth
systemctl --user import-environment {,WAYLAND_}DISPLAY
systemctl --user start wayland.target

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 6
